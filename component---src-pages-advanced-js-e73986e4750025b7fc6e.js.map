{"version":3,"sources":["webpack:///./src/components/Products/SkuCard.js","webpack:///./src/components/Products/Skus.js","webpack:///./src/pages/advanced.js"],"names":["cardStyles","display","flexDirection","justifyContent","alignItems","padding","marginBottom","boxShadow","backgroundColor","borderRadius","maxWidth","buttonStyles","fontSize","textAlign","color","outline","letterSpacing","SkuCard","redirectToCheckout","event","sku","quantity","a","preventDefault","this","props","stripe","items","successUrl","window","location","origin","cancelUrl","error","console","warn","render","amount","currency","price","style","name","toFixed","Intl","NumberFormat","currencyDisplay","format","onClick","id","React","Component","conatinerStyles","flexWrap","Skus","state","componentDidMount","Stripe","process","setState","query","skus","edges","map","node","key","AdvancedExamplePage","title","to"],"mappings":"mWAEA,IAAMA,EAAa,CACjBC,QAAS,OACTC,cAAe,SACfC,eAAgB,eAChBC,WAAY,aACZC,QAAS,OACTC,aAAc,OACdC,UAAW,mCACXC,gBAAiB,OACjBC,aAAc,MACdC,SAAU,SAENC,EAAe,CACnBC,SAAU,OACVC,UAAW,SACXC,MAAO,OACPC,QAAS,OACTV,QAAS,OACTE,UAAW,8BACXC,gBAAiB,oBACjBC,aAAc,MACdO,cAAe,SA4CFC,EA/BF,Y,QAAA,kD,EAAA,G,EAAA,G,6EAAA,2BACLC,mBADK,e,EAAA,G,EAAA,UACX,WAAyBC,EAAOC,EAAKC,GAArC,iBAAAC,EAAA,sEAAqCD,MAAW,GAC9CF,EAAMI,iBADR,SAE0BC,KAAKC,MAAMC,OAAOR,mBAAmB,CAC3DS,MAAO,CAAC,CAAEP,MAAKC,aACfO,WAAeC,OAAOC,SAASC,OAArB,WACVC,UAAcH,OAAOC,SAASC,OAArB,cALb,iBAEUE,EAFV,EAEUA,QAONC,QAAQC,KAAK,SAAUF,GAT3B,+C,+KADW,0DAcXG,OAAA,WAAU,IAxBSC,EAAQC,EACvBC,EAuBK,OACDnB,EAAMI,KAAKC,MAAML,IACvB,OACE,yBAAKoB,MAAOxC,GACV,4BAAKoB,EAAIqB,KAAT,KACA,sCA7BaJ,EA6BUjB,EAAImB,MA7BND,EA6BalB,EAAIkB,SA5BxCC,GAASF,EAAS,KAAKK,QAAQ,GAChB,IAAIC,KAAKC,aAAa,CAAC,SAAU,CAClDJ,MAAO,WACPF,SAAUA,EACVO,gBAAiB,WAECC,OAAOP,KAuBrB,4BACEC,MAAO7B,EACPoC,QAAS,SAAA5B,GAAK,OAAI,EAAKD,mBAAmBC,EAAOC,EAAI4B,MAFvD,YApBK,GAAiBC,IAAMC,WChCpC,IAAMC,EAAkB,CACtBlD,QAAS,OACTC,cAAe,MACfkD,SAAU,OACVjD,eAAgB,gBAChBE,QAAS,iBA4CIgD,E,4JAxCbC,MAAQ,CACN5B,OAAQ,M,oHAMV6B,kBAAA,WACE,IAAM7B,EAASG,OAAO2B,OAAOC,8CAC7BjC,KAAKkC,SAAS,CAAEhC,Y,EAGlBU,OAAA,WAAU,IAAD,OACP,OACE,kBAAC,cAAD,CACEuB,MAAK,aAaLvB,OAAQ,gBAAGwB,EAAH,EAAGA,KAAH,OACN,yBAAKpB,MAAOW,GACTS,EAAKC,MAAMC,KAAI,gBAAS1C,EAAT,EAAG2C,KAAH,OACd,kBAAC,EAAD,CAASC,IAAK5C,EAAI4B,GAAI5B,IAAKA,EAAKM,OAAQ,EAAK4B,MAAM5B,cAjB3D,U,GAfawB,aCKJe,UATa,kBAC1B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,qBACX,4DACA,kBAAC,EAAD,MACA,kBAAC,OAAD,CAAMC,GAAG,KAAT,kC","file":"component---src-pages-advanced-js-e73986e4750025b7fc6e.js","sourcesContent":["import React from 'react'\r\n\r\nconst cardStyles = {\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  justifyContent: 'space-around',\r\n  alignItems: 'flex-start',\r\n  padding: '1rem',\r\n  marginBottom: '1rem',\r\n  boxShadow: '5px 5px 25px 0 rgba(46,61,73,.2)',\r\n  backgroundColor: '#fff',\r\n  borderRadius: '6px',\r\n  maxWidth: '300px',\r\n}\r\nconst buttonStyles = {\r\n  fontSize: '13px',\r\n  textAlign: 'center',\r\n  color: '#fff',\r\n  outline: 'none',\r\n  padding: '12px',\r\n  boxShadow: '2px 5px 10px rgba(0,0,0,.1)',\r\n  backgroundColor: 'rgb(255, 178, 56)',\r\n  borderRadius: '6px',\r\n  letterSpacing: '1.5px',\r\n}\r\n\r\nconst formatPrice = (amount, currency) => {\r\n  let price = (amount / 100).toFixed(2)\r\n  let numberFormat = new Intl.NumberFormat(['en-US'], {\r\n    style: 'currency',\r\n    currency: currency,\r\n    currencyDisplay: 'symbol',\r\n  })\r\n  return numberFormat.format(price)\r\n}\r\n\r\nconst SkuCard = class extends React.Component {\r\n  async redirectToCheckout(event, sku, quantity = 1) {\r\n    event.preventDefault()\r\n    const { error } = await this.props.stripe.redirectToCheckout({\r\n      items: [{ sku, quantity }],\r\n      successUrl: `${window.location.origin}/page-2/`,\r\n      cancelUrl: `${window.location.origin}/advanced`,\r\n    })\r\n\r\n    if (error) {\r\n      console.warn('Error:', error)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const sku = this.props.sku\r\n    return (\r\n      <div style={cardStyles}>\r\n        <h4>{sku.name}x</h4>\r\n        <p>Price: {formatPrice(sku.price, sku.currency)}</p>\r\n        <button\r\n          style={buttonStyles}\r\n          onClick={event => this.redirectToCheckout(event, sku.id)}\r\n        >\r\n          BUY ME\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SkuCard\r\n","import React, { Component } from 'react'\r\nimport { graphql, StaticQuery } from 'gatsby'\r\nimport SkuCard from './SkuCard'\r\n\r\nconst conatinerStyles = {\r\n  display: 'flex',\r\n  flexDirection: 'row',\r\n  flexWrap: 'wrap',\r\n  justifyContent: 'space-between',\r\n  padding: '1rem 0 1rem 0',\r\n}\r\n\r\nclass Skus extends Component {\r\n  state = {\r\n    stripe: null,\r\n  }\r\n\r\n  // Initialise Stripe.js with your publishable key.\r\n  // You can find your key in the Dashboard:\r\n  // https://dashboard.stripe.com/account/apikeys\r\n  componentDidMount() {\r\n    const stripe = window.Stripe(process.env.GATSBY_STRIPE_PUBLIC_KEY)\r\n    this.setState({ stripe })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <StaticQuery\r\n        query={graphql`\r\n          query SkusForProduct {\r\n            skus: allStripeSku(sort: { fields: [price] }) {\r\n              edges {\r\n                node {\r\n                  id\r\n                  currency\r\n                  price\r\n                }\r\n              }\r\n            }\r\n          }\r\n        `}\r\n        render={({ skus }) => (\r\n          <div style={conatinerStyles}>\r\n            {skus.edges.map(({ node: sku }) => (\r\n              <SkuCard key={sku.id} sku={sku} stripe={this.state.stripe} />\r\n            ))}\r\n          </div>\r\n        )}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default Skus\r\n","import React from 'react'\r\nimport { Link } from 'gatsby'\r\n\r\nimport Layout from '../components/layout'\r\nimport SEO from '../components/seo'\r\n\r\nimport Skus from '../components/Products/Skus'\r\n\r\nconst AdvancedExamplePage = () => (\r\n  <Layout>\r\n    <SEO title=\"Advanced Example\" />\r\n    <h1>This is the advanced example</h1>\r\n    <Skus />\r\n    <Link to=\"/\">Go back to the easy example</Link>\r\n  </Layout>\r\n)\r\n\r\nexport default AdvancedExamplePage\r\n"],"sourceRoot":""}